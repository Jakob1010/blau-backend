/*
 * This file is generated by jOOQ.
 */
package jooq.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;
import java.time.OffsetDateTime;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Users implements Serializable {

    private static final long serialVersionUID = 1L;

    private final UUID userId;
    private final String username;
    private final String email;
    private final String password;
    private final String role;
    private final String token;
    private final LocalDateTime tokenExpiry;
    private final OffsetDateTime createdAt;

    public Users(Users value) {
        this.userId = value.userId;
        this.username = value.username;
        this.email = value.email;
        this.password = value.password;
        this.role = value.role;
        this.token = value.token;
        this.tokenExpiry = value.tokenExpiry;
        this.createdAt = value.createdAt;
    }

    public Users(
        UUID userId,
        String username,
        String email,
        String password,
        String role,
        String token,
        LocalDateTime tokenExpiry,
        OffsetDateTime createdAt
    ) {
        this.userId = userId;
        this.username = username;
        this.email = email;
        this.password = password;
        this.role = role;
        this.token = token;
        this.tokenExpiry = tokenExpiry;
        this.createdAt = createdAt;
    }

    /**
     * Getter for <code>public.users.user_id</code>.
     */
    public UUID getUserId() {
        return this.userId;
    }

    /**
     * Getter for <code>public.users.username</code>.
     */
    public String getUsername() {
        return this.username;
    }

    /**
     * Getter for <code>public.users.email</code>.
     */
    public String getEmail() {
        return this.email;
    }

    /**
     * Getter for <code>public.users.password</code>.
     */
    public String getPassword() {
        return this.password;
    }

    /**
     * Getter for <code>public.users.role</code>.
     */
    public String getRole() {
        return this.role;
    }

    /**
     * Getter for <code>public.users.token</code>.
     */
    public String getToken() {
        return this.token;
    }

    /**
     * Getter for <code>public.users.token_expiry</code>.
     */
    public LocalDateTime getTokenExpiry() {
        return this.tokenExpiry;
    }

    /**
     * Getter for <code>public.users.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Users other = (Users) obj;
        if (this.userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!this.userId.equals(other.userId))
            return false;
        if (this.username == null) {
            if (other.username != null)
                return false;
        }
        else if (!this.username.equals(other.username))
            return false;
        if (this.email == null) {
            if (other.email != null)
                return false;
        }
        else if (!this.email.equals(other.email))
            return false;
        if (this.password == null) {
            if (other.password != null)
                return false;
        }
        else if (!this.password.equals(other.password))
            return false;
        if (this.role == null) {
            if (other.role != null)
                return false;
        }
        else if (!this.role.equals(other.role))
            return false;
        if (this.token == null) {
            if (other.token != null)
                return false;
        }
        else if (!this.token.equals(other.token))
            return false;
        if (this.tokenExpiry == null) {
            if (other.tokenExpiry != null)
                return false;
        }
        else if (!this.tokenExpiry.equals(other.tokenExpiry))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        result = prime * result + ((this.username == null) ? 0 : this.username.hashCode());
        result = prime * result + ((this.email == null) ? 0 : this.email.hashCode());
        result = prime * result + ((this.password == null) ? 0 : this.password.hashCode());
        result = prime * result + ((this.role == null) ? 0 : this.role.hashCode());
        result = prime * result + ((this.token == null) ? 0 : this.token.hashCode());
        result = prime * result + ((this.tokenExpiry == null) ? 0 : this.tokenExpiry.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Users (");

        sb.append(userId);
        sb.append(", ").append(username);
        sb.append(", ").append(email);
        sb.append(", ").append(password);
        sb.append(", ").append(role);
        sb.append(", ").append(token);
        sb.append(", ").append(tokenExpiry);
        sb.append(", ").append(createdAt);

        sb.append(")");
        return sb.toString();
    }
}
